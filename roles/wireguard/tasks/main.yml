
- name: Install WireGuard and related packages
  apt:
    name:
      - wireguard
      - resolvconf
      - vim
    state: present

- name: Generate WireGuard private key
  command: wg genkey
  register: wg_private_key

- name: Save private key to file
  copy:
    content: "{{ wg_private_key.stdout }}"
    dest: /etc/wireguard/private.key
    mode: '0600'

- name: Generate WireGuard public key from private key
  shell: echo "{{ wg_private_key.stdout }}" | wg pubkey
  register: wg_public_key

- name: Save public key to file
  copy:
    content: "{{ wg_public_key.stdout }}"
    dest: /etc/wireguard/public.key
    mode: '0644'

# client key creation

- name: Create client directory for WireGuard keys
  file:
    path: /etc/wireguard/client
    state: directory
    mode: '0755'
  become: yes

- name: Generate private key for gias client
  shell: wg genkey | tee /etc/wireguard/client/gias_private_key
  register: gias_private_key
  become: yes

- name: Generate public key for gias client
  shell: cat /etc/wireguard/client/gias_private_key | wg pubkey
  register: gias_public_key
  become: yes

- name: Save gias public key to file
  copy:
    content: "{{ gias_public_key.stdout }}"
    dest: /etc/wireguard/client/gias_public_key
    mode: '0644'

# client file close


- name: Create WireGuard configuration file
  template:
    src: wg0.conf.j2
    dest: /etc/wireguard/wg0.conf
    mode: '0644'

- name: Create WireGuard client file
  template:
    src: clientvpn.conf.j2
    dest: /etc/wireguard/client/clientvpn.conf
    mode: '0644'

- name: Enable WireGuard on boot
  systemd:
    name: wg-quick@wg0
    enabled: yes

- name: Start WireGuard service
  systemd:
    name: wg-quick@wg0
    state: started

# Enable IP forwarding by adding to /etc/sysctl.conf
- name: Enable IP forwarding by adding to /etc/sysctl.conf
  shell: echo "net.ipv4.ip_forward = 1" | sudo tee -a /etc/sysctl.conf
  become: yes

# Reload sysctl to apply the changes
- name: Reload sysctl to apply the changes
  command: sysctl -p
  become: yes

- name: Check if WireGuard interface is already up
  shell: ip link show wg0
  register: wg0_interface_check
  ignore_errors: yes
  become: yes

- name: Bring up WireGuard interface if it's not already up
  command: wg-quick up wg0
  when: wg0_interface_check.rc != 0
  become: yes

- name: Restart WireGuard service
  ansible.builtin.systemd:
    name: wg-quick@wg0
    state: restarted

# Fetch the WireGuard configuration file to your local machine
- name: Download WireGuard configuration file
  fetch:
    src: /etc/wireguard/client/clientvpn.conf
    dest: ./clientvpn.conf
    flat: yes

